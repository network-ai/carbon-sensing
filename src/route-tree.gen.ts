/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ChatRouteImport } from './routes/chat'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ChatIndexRouteImport } from './routes/chat.index'
import { Route as ChatIdRouteImport } from './routes/chat.$id'
import { ServerRoute as ChatIdStreamServerRouteImport } from './routes/chat.$id.stream'

const rootServerRouteImport = createServerRootRoute()

const ChatRoute = ChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRoute,
} as any)
const ChatIdRoute = ChatIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ChatRoute,
} as any)
const ChatIdStreamServerRoute = ChatIdStreamServerRouteImport.update({
  id: '/chat/$id/stream',
  path: '/chat/$id/stream',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat': typeof ChatRouteWithChildren
  '/chat/$id': typeof ChatIdRoute
  '/chat/': typeof ChatIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chat/$id': typeof ChatIdRoute
  '/chat': typeof ChatIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/chat': typeof ChatRouteWithChildren
  '/chat/$id': typeof ChatIdRoute
  '/chat/': typeof ChatIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/chat' | '/chat/$id' | '/chat/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/chat/$id' | '/chat'
  id: '__root__' | '/' | '/chat' | '/chat/$id' | '/chat/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatRoute: typeof ChatRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/chat/$id/stream': typeof ChatIdStreamServerRoute
}
export interface FileServerRoutesByTo {
  '/chat/$id/stream': typeof ChatIdStreamServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/chat/$id/stream': typeof ChatIdStreamServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/chat/$id/stream'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/chat/$id/stream'
  id: '__root__' | '/chat/$id/stream'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ChatIdStreamServerRoute: typeof ChatIdStreamServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof ChatRoute
    }
    '/chat/$id': {
      id: '/chat/$id'
      path: '/$id'
      fullPath: '/chat/$id'
      preLoaderRoute: typeof ChatIdRouteImport
      parentRoute: typeof ChatRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/chat/$id/stream': {
      id: '/chat/$id/stream'
      path: '/chat/$id/stream'
      fullPath: '/chat/$id/stream'
      preLoaderRoute: typeof ChatIdStreamServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface ChatRouteChildren {
  ChatIdRoute: typeof ChatIdRoute
  ChatIndexRoute: typeof ChatIndexRoute
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatIdRoute: ChatIdRoute,
  ChatIndexRoute: ChatIndexRoute,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatRoute: ChatRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ChatIdStreamServerRoute: ChatIdStreamServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
